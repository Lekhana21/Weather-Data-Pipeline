{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_WeatherBlob_Gen2",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_WeatherBlob_Gen2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          records as (coord as (lat as double, lon as double), main as (humidity as short, temp as double), name as string, weather as (description as string, icon as double, id as short, main as string)[])[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'arrayOfDocuments') ~> source1",
				"source1 foldDown(unroll(records),",
				"     mapColumn(",
				"          records",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 derive(lon = records.coord.lon,",
				"          lat = records.coord.lat,",
				"          temp = records.main.temp,",
				"          humidity = records.main.humidity,",
				"          city_name = records.name,",
				"          weather_id = records.weather[0].id,",
				"          weather_main = records.weather[0].main,",
				"          description = records.weather[0].description,",
				"          icon = records.weather[0].icon) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          lon = {coord.lon},",
				"          lat = {coord.lat},",
				"          temp = {main.temp},",
				"          humidity = {main.humidity},",
				"          name = {name},",
				"          weather_id = {weather.id},",
				"          weather_main = {weather.main},",
				"          description = {weather.description},",
				"          icon = {weather.icon}",
				"     )) ~> sink1"
			]
		}
	}
}